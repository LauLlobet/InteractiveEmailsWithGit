____HEROKU_SESSION______
var pushEventProperties = extractBranchAndRepositoryStringsFromWebhookNoification(httprequest);

	OKOKOKOKO tempfolder = "/tmp"+CurrentMIllis()+"_"+randNumber();
	OKOKOKKOK downloadGitPushFromRepositoryAndBranch(pushEventProperties.repository, pushEventProperties.branch,tempfolder)
	OKOKOKKOK var indexHtml = extractIndexHtmlFromFolderToString(tempfolder);
	OKOKOKKOK var pe = new pathsExtractor();
	OKOKOKKOK var imgList = pe.doIt(indexHtml);

var map = uploadLocalImgsToFirebaseAndGetPath(imgList,tempfolder,githubUploader);

	OKOKOKKOK var indexHtmlCloudified = replacePathsOfLocalImagesToCloudOnesUsingMap(indexHtml, mapOfImagesPath);

_____COMPONENT____
var arrayOfEmails = firebaseDocumentDatabaseGetterOfSEmailsSubscribedIntoBranch(pushEventProperties.repository, pushEventProperties.branch);

	OKOKOKOKOK SendGridSendEmail sender = new SendGridSendEmail()

______MOCKING_______
sendEmailToALlMembersOfEmailList(sender,indexHtmlCloudified,arrayOfEMails); // authenification token de 
